unit Unit7;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Imaging.pngimage,
  Vcl.ExtCtrls;

type
  TfrmGame = class(TForm)
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    Label10: TLabel;
    Label9: TLabel;
    procedure FormCreate(Sender: TObject);
    procedure Label1DragOver(Sender, Source: TObject; X, Y: Integer;
      State: TDragState; var Accept: Boolean);
    procedure Label5DragOver(Sender, Source: TObject; X, Y: Integer;
      State: TDragState; var Accept: Boolean);
    procedure Label10DragOver(Sender, Source: TObject; X, Y: Integer;
      State: TDragState; var Accept: Boolean);
    procedure Label6DragOver(Sender, Source: TObject; X, Y: Integer;
      State: TDragState; var Accept: Boolean);
    procedure Label2DragOver(Sender, Source: TObject; X, Y: Integer;
      State: TDragState; var Accept: Boolean);
    procedure Label4DragOver(Sender, Source: TObject; X, Y: Integer;
      State: TDragState; var Accept: Boolean);
    procedure Label3DragOver(Sender, Source: TObject; X, Y: Integer;
      State: TDragState; var Accept: Boolean);
    procedure Label7DragOver(Sender, Source: TObject; X, Y: Integer;
      State: TDragState; var Accept: Boolean);
    procedure Label8DragOver(Sender, Source: TObject; X, Y: Integer;
      State: TDragState; var Accept: Boolean);

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmGame: TfrmGame;
  MoveShape1: Boolean;
  Pi: TPoint;
  MausPos: TPoint;

implementation

{$R *.dfm}

procedure TfrmGame.FormCreate(Sender: TObject);
begin
  DeleteMenu(GetSystemMenu(Handle, False), SC_MOVE, MF_BYCOMMAND);
end;

procedure TfrmGame.Label10DragOver(Sender, Source: TObject; X, Y: Integer;
  State: TDragState; var Accept: Boolean);
begin
    Label10.Top := Label10.Top - Label10.Height div 2 + Y;
  Label10.Left := Label10.Left - Label10.Width div 2 + X;
end;

procedure TfrmGame.Label1DragOver(Sender, Source: TObject; X, Y: Integer;
  State: TDragState; var Accept: Boolean);
begin
  Label1.Top := Label1.Top - Label1.Height div 2 + Y;
  Label1.Left := Label1.Left - Label1.Width div 2 + X;
end;



procedure TfrmGame.Label2DragOver(Sender, Source: TObject; X, Y: Integer;
  State: TDragState; var Accept: Boolean);
begin
      Label2.Top := Label2.Top - Label2.Height div 2 + Y;
      Label2.Left := Label2.Left - Label2.Width div 2 + X;
end;

procedure TfrmGame.Label3DragOver(Sender, Source: TObject; X, Y: Integer;
  State: TDragState; var Accept: Boolean);
begin
      Label3.Top := Label3.Top - Label3.Height div 2 + Y;
      Label3.Left := Label3.Left - Label3.Width div 2 + X;
end;

procedure TfrmGame.Label4DragOver(Sender, Source: TObject; X, Y: Integer;
  State: TDragState; var Accept: Boolean);
begin
      Label4.Top := Label4.Top - Label4.Height div 2 + Y;
      Label4.Left := Label4.Left - Label4.Width div 2 + X;
end;

procedure TfrmGame.Label5DragOver(Sender, Source: TObject; X, Y: Integer;
  State: TDragState; var Accept: Boolean);
begin
   Label5.Top := Label5.Top - Label5.Height div 2 + Y;
   Label5.Left := Label5.Left - Label5.Width div 2 + X;
end;

procedure TfrmGame.Label6DragOver(Sender, Source: TObject; X, Y: Integer;
  State: TDragState; var Accept: Boolean);
begin
    Label6.Top := Label6.Top - Label6.Height div 2 + Y;
      Label6.Left := Label6.Left - Label6.Width div 2 + X;
end;





procedure TfrmGame.Label7DragOver(Sender, Source: TObject; X, Y: Integer;
  State: TDragState; var Accept: Boolean);
begin
      Label7.Top := Label7.Top - Label7.Height div 2 + Y;
      Label7.Left := Label7.Left - Label7.Width div 2 + X;
end;

procedure TfrmGame.Label8DragOver(Sender, Source: TObject; X, Y: Integer;
  State: TDragState; var Accept: Boolean);
begin
      Label8.Top := Label8.Top - Label8.Height div 2 + Y;
      Label8.Left := Label8.Left - Label8.Width div 2 + X;
end;

end.
